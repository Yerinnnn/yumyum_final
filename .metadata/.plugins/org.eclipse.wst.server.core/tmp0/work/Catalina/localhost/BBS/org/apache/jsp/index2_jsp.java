/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2018-11-21 06:56:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/custom.css\">\r\n");
      out.write("\t<title>댓글달기</title>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar lastID = 0;\r\n");
      out.write("\t\tfunction submitFunction() {\r\n");
      out.write("\t\t\tvar chatName = $('#chatName').val();\r\n");
      out.write("\t\t\tvar chatContent = $('#chatContent').val();\r\n");
      out.write("\t\t\t// by yslee\r\n");
      out.write("\t\t\t//alert(chatName,chatContent);\r\n");
      out.write("\t\t\t//console.log(chatName);\r\n");
      out.write("\t\t\t//window.alert(chatContent);\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\turl: \"./chatSubmitServlet\",\r\n");
      out.write("\t\t\t\tdata: {\r\n");
      out.write("\t\t\t\t\tchatName: encodeURIComponent(chatName),\r\n");
      out.write("\t\t\t\t\tchatContent: encodeURIComponent(chatContent)\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\t\t// by yslee\r\n");
      out.write("\t\t\t\t\t//window.alert(result);\r\n");
      out.write("\t\t\t\t\tif(result == 1) {\r\n");
      out.write("\t\t\t\t\t\tautoClosingAlert('#successMessage', 2000);\r\n");
      out.write("\t\t\t\t\t} else if(result == 0) {\r\n");
      out.write("\t\t\t\t\t\tautoClosingAlert('#dangerMessage', 2000);\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tautoClosingAlert('#warningMessage', 2000);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\twindow.alert(\"testing - ajax\");\r\n");
      out.write("\t\t\t$('#chatContent').val('');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction autoClosingAlert(selector, delay) {\r\n");
      out.write("\t\t\tvar alert = $(selector).alert();\r\n");
      out.write("\t\t\talert.show();\r\n");
      out.write("\t\t\twindow.setTimeout(function() {alert.hide()}, delay);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction chatListFunction(type) {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\turl: \"./chatListServlet\",\r\n");
      out.write("\t\t\t\tdata: {\r\n");
      out.write("\t\t\t\t\tlistType: type,\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\t\tif(data == \"\") return;\r\n");
      out.write("\t\t\t\t\tvar parsed = JSON.parse(data);\r\n");
      out.write("\t\t\t\t\tvar result = parsed.result;\r\n");
      out.write("\t\t\t\t\tfor(var i = 0; i < result.length; i++) {\r\n");
      out.write("\t\t\t\t\t\taddChat(result[i][0].value, result[i][1].value, result[i][2].value);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tlastID = Number(parsed.last);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction addChat(chatName, chatContent, chatTime) {\r\n");
      out.write("\t\t\t$('#chatList').append('<div class=\"row\">' +\r\n");
      out.write("\t\t\t\t\t'<div class=\"col-lg-12\">' +\r\n");
      out.write("\t\t\t\t\t'<div class=\"media\">' +\r\n");
      out.write("\t\t\t\t\t'<a class=\"pull-left\" href=\"#\">' +\r\n");
      out.write("\t\t\t\t\t'<img class=\"media-object img-circle\" src=\"images/icon.png\" alt=\"\">' +\r\n");
      out.write("\t\t\t\t\t'</a>' +\r\n");
      out.write("\t\t\t\t\t'<div class=\"media-body\">' +\r\n");
      out.write("\t\t\t\t\t'<h4 class=\"media-heading\">'+\r\n");
      out.write("\t\t\t\t\tchatName +\r\n");
      out.write("\t\t\t\t\t'<span class=\"small pull-right\">' +\r\n");
      out.write("\t\t\t\t\tchatTime +\r\n");
      out.write("\t\t\t\t\t'</span>' +\r\n");
      out.write("\t\t\t\t\t'</h4>' +\r\n");
      out.write("\t\t\t\t\t'<p>' + \r\n");
      out.write("\t\t\t\t\tchatContent +\r\n");
      out.write("\t\t\t\t\t'</p>' +\r\n");
      out.write("\t\t\t\t\t'</div>' +\r\n");
      out.write("\t\t\t\t\t'</div>' +\r\n");
      out.write("\t\t\t\t\t'</div>' +\r\n");
      out.write("\t\t\t\t\t'</div>' +\r\n");
      out.write("\t\t\t\t\t'<hr>');\r\n");
      out.write("\t\t\t$('#chatList').scrollTop($('#chatList')[0].scrollHeight);\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\tfunction getInfiniteChat() {\r\n");
      out.write("\t\t\tsetInterval(function() {\r\n");
      out.write("\t\t\t\tchatListFunction(lastID);\r\n");
      out.write("\t\t\t}, 1000);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"container bootstrap snippet\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-xs-12\">\r\n");
      out.write("\t\t\t\t\t<div class=\"portlet portlet-default\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"portlet-heading\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"portlet-title\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h4><i class=\"fa fa-circle text-green\"></i>실시간 채팅방</h4>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"chat\" class=\"panel-collapse collapse in\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"chatList\" class=\"portlet-body chat-widget\" style=\"overflow-y: auto; width: auto; height: 600px;\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"portlet-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group col-xs-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input style=\"height: 40px;\" type=\"text\" id=\"chatName\" class=\"form-control\" placeholder=\"이름\" maxlength=\"8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row\" style=\"height: 90px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group col-xs-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<textarea style=\"height: 80px;\" id=\"chatContent\" class=\"form-control\" placeholder=\"메시지를 입력하세요.\" maxlength=\"100\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group col-xs-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default pull-right\" onclick=\"submitFunction();\">전송</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\t\t\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"alert alert-success\" id=\"successMessage\" style=\"display: none;\">\r\n");
      out.write("\t\t\t<strong>메시지 전송에 성공하였습니다.</strong>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"alert alert-danger\" id=\"dangerMessage\" style=\"display: none;\">\r\n");
      out.write("\t\t\t<strong>이름과 내용을 모두 입력해주세요.</strong>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"alert alert-warning\" id=\"warningMessage\" style=\"display: none;\">\r\n");
      out.write("\t\t\t<strong>데이터베이스 오류가 발생했습니다.</strong>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\tchatListFunction('ten');\r\n");
      out.write("\t\t\tgetInfiniteChat();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
